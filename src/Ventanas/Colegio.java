package Ventanas;

import Clases.Alumno;
import Clases.Materia;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author Usuario
 */
public class Colegio extends javax.swing.JFrame {
    private static Map<Integer,Alumno> alumnos=new HashMap();
    private static Map<Integer,Materia> materias=new HashMap();
    /**
     * Creates new form Escritorio
     */
    public Colegio() {
        super("Administrar Alumnos y Materias");
        initComponents();
         ///---------PRECARGAR MATERIAS---------
        materias.put(1, new Materia(1,"Ingles 1",1));
        materias.put(2, new Materia(2,"Matematicas",1));
        materias.put(3, new Materia(3,"Laboratorio 1",1));
        ///---------PRECARGAR ALUMNOS Y MATERIAS---------
        Alumno alum=new Alumno(1001,"Lopez","Martin"),alum2=new Alumno(1002,"Martinez","Brenda");;
        alum.getMaterias().putAll(Colegio.getMaterias());///MATERIAS ALUM
        alum2.getMaterias().putAll(Colegio.getMaterias());///MATERIAS ALUM2
        alumnos.put(1, alum);
        alumnos.put(2, alum2);
        ///---------INTENTAR AGREGAR MISMA MATERIA ALUM2 (MARTINEZ)---------
        alumnos.get(2).getMaterias().put(3, new Materia(3,"Laboratorio 1",1));
        ///---------MOSTRAR POR CONSOLA ALUMNOS Y SUS RESPECTIVAS MATERIAS---------
        System.out.println("-----------------------------------------------");
        for (Map.Entry<Integer, Alumno> entry : Colegio.getAlumnos().entrySet()) {
            Integer key = entry.getKey();
            Alumno alum1 = entry.getValue();
            System.out.println("                    ALUMNO "+key+"\n\nLegajo: "+alum1.getLegajo()+"\nNombre y Apellido: "+alum1.getApellido()+" "+alum1.getNombre());
            System.out.println("\n              MATERIAS INSCRIPTO");
            for (Map.Entry<Integer, Materia> entry1 : alum1.getMaterias().entrySet()) {
                Materia mat = entry1.getValue();
                System.out.println("\nMateria "+mat.getIdMateria()+"\nNombre: "+mat.getNombre()+"\nAnio: "+mat.getAnio());
            }
            System.out.println("-----------------------------------------------");
        }
    }

    public static Map<Integer, Alumno> getAlumnos() {
        return alumnos;
    }

    public static Map<Integer, Materia> getMaterias() {
        return materias;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jEscritorio = new javax.swing.JDesktopPane();
        jMenu = new javax.swing.JMenuBar();
        jMenuAdministrar = new javax.swing.JMenu();
        jMICargaAlumno = new javax.swing.JMenuItem();
        jMICargarMateria = new javax.swing.JMenuItem();
        jMIInscribir = new javax.swing.JMenuItem();
        jMIAlumnosInscriptos = new javax.swing.JMenuItem();
        jMSalir = new javax.swing.JMenu();
        jMISalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jEscritorioLayout = new javax.swing.GroupLayout(jEscritorio);
        jEscritorio.setLayout(jEscritorioLayout);
        jEscritorioLayout.setHorizontalGroup(
            jEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 583, Short.MAX_VALUE)
        );
        jEscritorioLayout.setVerticalGroup(
            jEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        jMenuAdministrar.setText("Administrar");

        jMICargaAlumno.setText("Cargar Alumno");
        jMICargaAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICargaAlumnoActionPerformed(evt);
            }
        });
        jMenuAdministrar.add(jMICargaAlumno);

        jMICargarMateria.setText("Cargar Materia");
        jMICargarMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICargarMateriaActionPerformed(evt);
            }
        });
        jMenuAdministrar.add(jMICargarMateria);

        jMIInscribir.setText("Inscribir");
        jMIInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIInscribirActionPerformed(evt);
            }
        });
        jMenuAdministrar.add(jMIInscribir);

        jMIAlumnosInscriptos.setText("Alumnos inscriptos");
        jMIAlumnosInscriptos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIAlumnosInscriptosActionPerformed(evt);
            }
        });
        jMenuAdministrar.add(jMIAlumnosInscriptos);

        jMenu.add(jMenuAdministrar);

        jMSalir.setText("Salir");

        jMISalir.setText("Salir");
        jMISalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMISalirActionPerformed(evt);
            }
        });
        jMSalir.add(jMISalir);

        jMenu.add(jMSalir);

        setJMenuBar(jMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jEscritorio)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jEscritorio)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ///---------MENU ITEM CARGAR MATERIA--------
    private void jMICargarMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICargarMateriaActionPerformed
        jEscritorio.removeAll();
        jEscritorio.repaint();
        CargarMaterias cM=new CargarMaterias();
        cM.setVisible(true);
        jEscritorio.add(cM);
    }//GEN-LAST:event_jMICargarMateriaActionPerformed

    ///---------MENU ITEM SALIR--------
    private void jMISalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMISalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMISalirActionPerformed

    ///---------MENU ITEM CARGAR ALUMNO--------
    private void jMICargaAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICargaAlumnoActionPerformed
        jEscritorio.removeAll();
        jEscritorio.repaint();
        CargarAlumnos cA=new CargarAlumnos();
        cA.setVisible(true);
        jEscritorio.add(cA);
    }//GEN-LAST:event_jMICargaAlumnoActionPerformed

    ///---------MENU ITEM INSCRIBIR ALUMNO--------
    private void jMIInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIInscribirActionPerformed
        jEscritorio.removeAll();
        jEscritorio.repaint();
        Inscribir I=new Inscribir();
        I.setVisible(true);
        jEscritorio.add(I);
    }//GEN-LAST:event_jMIInscribirActionPerformed

    ///---------MENU ITEM ALUMNOS INSCRIPTOS--------
    private void jMIAlumnosInscriptosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIAlumnosInscriptosActionPerformed
        jEscritorio.removeAll();
        jEscritorio.repaint();
        MostrarMateriasAlumnosInscriptos MMAI= new MostrarMateriasAlumnosInscriptos();
        MMAI.setVisible(true);
        jEscritorio.add(MMAI);
    }//GEN-LAST:event_jMIAlumnosInscriptosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Colegio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Colegio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Colegio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Colegio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Colegio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jEscritorio;
    private javax.swing.JMenuItem jMIAlumnosInscriptos;
    private javax.swing.JMenuItem jMICargaAlumno;
    private javax.swing.JMenuItem jMICargarMateria;
    private javax.swing.JMenuItem jMIInscribir;
    private javax.swing.JMenuItem jMISalir;
    private javax.swing.JMenu jMSalir;
    private javax.swing.JMenuBar jMenu;
    private javax.swing.JMenu jMenuAdministrar;
    // End of variables declaration//GEN-END:variables
}
